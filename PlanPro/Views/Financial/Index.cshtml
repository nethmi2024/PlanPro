@model PlanPro.Models.FinancialOverviewViewModel
@{
    ViewBag.Title = "Financial Planning";

    @functions {
        public static System.Globalization.CultureInfo GetLkrCulture()
        {
            var culture = (System.Globalization.CultureInfo)System.Threading.Thread.CurrentThread.CurrentCulture.Clone();
            culture.NumberFormat.CurrencySymbol = "Rs.";
            culture.NumberFormat.CurrencyDecimalDigits = 2;
            culture.NumberFormat.CurrencyPositivePattern = 2;
            return culture;
        }
    }
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Poppins', sans-serif;
    }

    .modal-content {
        animation: slideFade 0.3s ease;
        background: #ffffff;
        border: none;
        border-radius: 1.5rem;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
        transition: box-shadow 0.3s ease;
    }

        .modal-content:hover {
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.08);
        }

    @@keyframes slideFade {
        from {
            transform: translateY(20px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .form-floating > label {
        padding-left: 0.75rem;
    }

    .modal-header, .modal-footer {
        border: none;
        background-color: #f8f9fa;
        border-radius: 1.5rem 1.5rem 0 0;
    }

    .modal-footer {
        border-radius: 0 0 1.5rem 1.5rem;
    }

    .form-label {
        font-weight: 600;
        color: #343a40;
    }

    .form-control,
    .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border-radius: 0.75rem;
        border: 1px solid #ced4da;
        transition: all 0.3s ease-in-out;
        font-size: 1rem;
    }

        .form-control:focus,
        .form-select:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.25);
            outline: none;
        }

    .btn-primary {
        background: linear-gradient(to right, #4e73df, #1cc88a);
        border: none;
        border-radius: 0.75rem;
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background: linear-gradient(to right, #3a66d2, #17b67d);
            transform: scale(1.02);
        }

    .btn-outline-secondary {
        border-radius: 0.75rem;
        padding: 0.5rem 1rem;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
    }

        .btn-outline-secondary:hover {
            background-color: #1cc88a;
            color: white;
            border-color: #17b67d;
            transform: scale(1.02);
        }

    .form-group {
        margin-bottom: 1.5rem;
    }

    @@media (min-width: 768px) {
        .form-control,
        .form-select {
            max-width: 100%;
        }
    }
</style>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">


<div class="container my-5">
    <div class="text-center mb-4">
        <h2 class="display-5 fw-bold">
            <i class="fas fa-coins me-2"></i> Financial Dashboard
        </h2>

        <p class="text-muted">Track your income, expenses, and financial goals easily.</p>
        <a href="@Url.Action("Charts", "Financial")" class="btn btn-outline-primary mt-3">
            <i class="fas fa-chart-column me-2"></i> View Charts
        </a>
    </div>


    <div class="row mb-5">
        <div class="col-md-4">
            <div class="card text-white bg-success mb-3 shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Current Balance</h5>
                    <p class="card-text fs-4">@Model.CurrentBalance.ToString("C", GetLkrCulture())</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-primary mb-3 shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Monthly Income</h5>
                    <p class="card-text fs-4">@Model.MonthlyIncome.ToString("C", GetLkrCulture())</p>
                    @if (Model.MonthlyIncome > 0)
                    {
                        <form action="@Url.Action("DeleteIncome", "Financial")" method="post" class="delete-income-form mt-3 d-inline-block">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm">Delete Income</button>
                        </form>

                    }
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-danger mb-3 shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Total Expenses</h5>
                    <p class="card-text fs-4">@Model.TotalExpenses.ToString("C", GetLkrCulture())</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm rounded-4 mb-4">
        <div class="card-header bg-light fw-bold">
            <i class="fas fa-plus-circle me-2"></i> Add Monthly Income
        </div>

        <div class="card-body">
            @using (Html.BeginForm("AddIncome", "Financial", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="input-group">
                    <input type="number" step="0.01" name="MonthlyIncome" class="form-control" placeholder="Enter income amount" required />
                    <button type="submit" class="btn btn-success">Add</button>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-sm rounded-4 mb-4">
        <div class="card-header bg-light fw-bold">
            <i class="fas fa-money-bill-wave me-2"></i> Add Expense
        </div>

        <div class="card-body">
            @using (Html.BeginForm("AddExpense", "Financial", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="row g-3">
                    <div class="col-md-4">
                        <input name="Amount" type="number" step="0.01" class="form-control" placeholder="Amount" required />
                    </div>
                    <div class="col-md-4">
                        <input name="Category" class="form-control" placeholder="Category" required />
                    </div>
                    <div class="col-md-4">
                        <input name="Date" type="date" class="form-control" required />
                    </div>
                </div>
                <div class="mt-3 text-end">
                    <button type="submit" class="btn btn-danger">Add Expense</button>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-sm rounded-4 mb-5">
        <div class="card-header bg-light fw-bold">
            <i class="fas fa-bullseye me-2"></i> Set Financial Goal
        </div>

        <div class="card-body">
            @using (Html.BeginForm("AddGoal", "Financial", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="row g-3">
                    <div class="col-md-4">
                        <input name="GoalName" class="form-control" placeholder="Goal Name" required />
                    </div>
                    <div class="col-md-4">
                        <input name="TargetAmount" type="number" step="0.01" class="form-control" placeholder="Target Amount" required />
                    </div>
                    <div class="col-md-4">
                        <input name="Deadline" type="date" class="form-control" required />
                    </div>
                </div>
                <div class="mt-3 text-end">
                    <button type="submit" class="btn btn-primary">Add Goal</button>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-sm rounded-4 mb-4">
        <div class="card-header bg-light fw-bold">
            <i class="fas fa-thumbtack me-2"></i> Your Financial Goals
        </div>

        <ul class="list-group list-group-flush">
            @if (Model.Goals.Any())
            {
                foreach (var goal in Model.Goals)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            <strong>@goal.GoalName</strong>
                            <br />
                            <span class="text-muted">
                                @goal.TargetAmount.ToString("C", GetLkrCulture()) by @(goal.Deadline?.ToShortDateString())
                            </span>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-outline-secondary"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editGoalModal_@goal.Id">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </button>

                            <form action="@Url.Action("DeleteGoal", "Financial")" method="post" class="delete-form">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@goal.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>

                        </div>
                    </li>

                    <div class="modal fade" id="editGoalModal_@goal.Id" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content shadow-lg border-0 rounded-4">
                                @using (Html.BeginForm("EditGoal", "Financial", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title fw-bold">
                                            <i class="fas fa-pencil-alt me-2"></i> Edit Financial Goal
                                        </h5>

                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body p-4">
                                        @Html.Hidden("Id", goal.Id)

                                        <div class="form-group">
                                            <label for="goalName_@goal.Id" class="form-label">Goal Name</label>
                                            <input name="GoalName" class="form-control" id="goalName_@goal.Id" value="@goal.GoalName" required />
                                        </div>

                                        <div class="form-group">
                                            <label for="targetAmount_@goal.Id" class="form-label">Target Amount</label>
                                            <input name="TargetAmount" type="number" step="0.01" class="form-control" id="targetAmount_@goal.Id" value="@goal.TargetAmount" required />
                                        </div>

                                        <div class="form-group">
                                            <label for="deadline_@goal.Id" class="form-label">Deadline</label>
                                            <input name="Deadline" type="date" class="form-control" id="deadline_@goal.Id" value="@goal.Deadline?.ToString(" yyyy-MM-dd")" required />
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save me-2"></i> Save Changes
                                        </button>

                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <li class="list-group-item text-muted">No goals set yet.</li>
            }
        </ul>
    </div>

    <div class="card shadow-sm rounded-4">
        <div class="card-header bg-light fw-bold">
            <i class="fas fa-receipt me-2"></i> Your Expenses
        </div>

        <ul class="list-group list-group-flush">
            @if (Model.Expenses.Any())
            {
                foreach (var expense in Model.Expenses)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            @expense.Category
                            <br />
                            <span class="text-muted">@expense.Amount.ToString("C", GetLkrCulture()) on @expense.Date.ToShortDateString()</span>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-outline-secondary"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editExpenseModal_@expense.Id">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </button>

                            <form action="@Url.Action("DeleteExpense", "Financial")" method="post" class="delete-form">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@expense.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>

                        </div>
                    </li>

                    <div class="modal fade" id="editExpenseModal_@expense.Id" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content shadow-lg border-0 rounded-4">
                                @using (Html.BeginForm("EditExpense", "Financial", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title fw-bold">
                                            <i class="fas fa-pencil-alt me-2"></i> Edit Expense
                                        </h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body p-4">
                                        @Html.Hidden("Id", expense.Id)

                                        <div class="form-group">
                                            <label for="amount_@expense.Id" class="form-label">Amount</label>
                                            <input name="Amount" type="number" step="0.01" class="form-control" id="amount_@expense.Id" value="@expense.Amount" required />
                                        </div>

                                        <div class="form-group">
                                            <label for="category_@expense.Id" class="form-label">Category</label>
                                            <input name="Category" class="form-control" id="category_@expense.Id" value="@expense.Category" required />
                                        </div>

                                        <div class="form-group">
                                            <label for="date_@expense.Id" class="form-label">Date</label>
                                            <input name="Date" type="date" class="form-control" id="date_@expense.Id" value="@expense.Date.ToString("yyyy-MM-dd")" required />
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save me-2"></i> Save Changes
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                }
            }
            else
            {
                <li class="list-group-item text-muted">No expenses recorded yet.</li>
            }
        </ul>
    </div>

</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteIncomeForm = document.querySelector('form.delete-income-form');
        if (deleteIncomeForm) {
            deleteIncomeForm.addEventListener('submit', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You are about to delete your monthly income. This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteIncomeForm.submit();
                    }
                });
            });
        }

        const deleteForms = document.querySelectorAll('form.delete-form');

        deleteForms.forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Are you sure?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });
    });

</script>


