@model PlanPro.Models.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Poppins', sans-serif;
    }

    .card {
        background: #ffffff;
        border: none;
        border-radius: 1.5rem;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
        transition: box-shadow 0.3s ease;
        max-width: 400px;
        margin: 3rem auto;
        padding: 2.5rem;
    }

        .card:hover {
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.08);
        }

    h2.page-title {
        color: #4e73df;
        font-size: 1.8rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: 2rem;
    }


    .form-label {
        font-weight: 600;
        color: #343a40;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border-radius: 0.75rem;
        border: 1px solid #ced4da;
        transition: all 0.3s ease-in-out;
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.25);
            outline: none;
        }

    .btn-primary {
        background: linear-gradient(to right, #4e73df, #1cc88a);
        border: none;
        border-radius: 0.75rem;
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
        width: 100%;
        display: inline-flex;
        justify-content: center;
        align-items: center;
    }

        .btn-primary:hover {
            background: linear-gradient(to right, #3a66d2, #17b67d);
            transform: scale(1.02);
        }

    .text-primary {
        color: #4e73df !important;
    }

    .form-group, .mb-3, .mb-4 {
        margin-bottom: 1.5rem;
    }

    .d-grid {
        margin-top: 1.5rem;
    }

    @@media (min-width: 768px) {
        .form-control {
            max-width: 100%;
        }
    }

    .input-group-text {
        background: #fff;
        border-left: none;
        border-radius: 0 0.75rem 0.75rem 0;
    }
</style>

<div class="card">
    <h2 class="page-title"><i class="bi bi-person-plus-fill me-2"></i>Create Account</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Enter your full name" })
            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger small" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "form-label" })
            <div class="input-group">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter a password", @id = "registerPassword" })
                <span class="input-group-text" id="toggleRegisterPassword" style="cursor: pointer;">
                    <i class="bi bi-eye-slash" id="toggleRegisterPasswordIcon"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
            <div class="input-group">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Re-enter the password", @id = "registerConfirmPassword" })
                <span class="input-group-text" id="toggleRegisterConfirmPassword" style="cursor: pointer;">
                    <i class="bi bi-eye-slash" id="toggleRegisterConfirmPasswordIcon"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger small" })
        </div>



        <div class="d-grid">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-person-plus-fill me-2"></i> Register
            </button>
        </div>

        <div class="text-center mt-4">
            Already have an account? <a href="@Url.Action("Login", "Account")" class="text-decoration-none fw-semibold" style="color:#3a66d2;">Login here</a>
        </div>

    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: '@TempData["ErrorMessage"]',
                    confirmButtonColor: '#4e73df'
                });
            </text>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: '@TempData["SuccessMessage"]',
                    confirmButtonColor: '#1cc88a'
                });
            </text>
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const togglePassword = (toggleId, inputId, iconId) => {
                const toggle = document.getElementById(toggleId);
                const input = document.getElementById(inputId);
                const icon = document.getElementById(iconId);

                toggle.addEventListener("click", function () {
                    const type = input.getAttribute("type") === "password" ? "text" : "password";
                    input.setAttribute("type", type);
                    icon.classList.toggle("bi-eye");
                    icon.classList.toggle("bi-eye-slash");
                });
            };

            togglePassword("toggleRegisterPassword", "registerPassword", "toggleRegisterPasswordIcon");
            togglePassword("toggleRegisterConfirmPassword", "registerConfirmPassword", "toggleRegisterConfirmPasswordIcon");
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
