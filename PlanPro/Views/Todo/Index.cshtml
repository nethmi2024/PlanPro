@model IEnumerable<PlanPro.Models.TodoItem>
@{
    ViewBag.Title = "Your To-Do List";
}

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

<style>

    .body {
        font-family: 'Poppins', sans-serif;
    }

    .custom-blue-btn {
        background-color: #4ea1f3;
        border-color: #4ea1f3;
        color: white;
        transition: background-color 0.2s ease, border-color 0.2s ease;
    }

        .custom-blue-btn:hover {
            background-color: #368cd7;
            border-color: #368cd7;
            color: white;
        }

    .scrollable-table-container {
        max-height: 350px;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        margin-bottom: 2rem;
        margin-top: 20px;
    }

        .scrollable-table-container thead th {
            position: sticky;
            top: 0;
            background-color: #f8f9fa;
            z-index: 1;
        }

    .filter-info {
        font-size: 0.95rem;
        color: #6c757d;
    }
</style>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary mb-4">
            <i class="fas fa-clipboard-list me-2 text-primary"></i> My To-Do List
        </h2>

        <a href="@Url.Action("Create", "Todo")"
           class="btn custom-blue-btn rounded-pill shadow-sm px-4">
            <i class="fas fa-plus me-2"></i> Add New Task
        </a>
    </div>
    <form method="get" class="row g-3 mb-3">
        <div class="col-md-3">
            <select name="status" class="form-select">
                <option value="">-- Filter by Status --</option>
                <option value="pending" @(ViewBag.SelectedStatus == "pending" ? "selected" : "")>Pending</option>
                <option value="completed" @(ViewBag.SelectedStatus == "completed" ? "selected" : "")>Completed</option>
            </select>
        </div>
        <div class="col-md-3">
            <select name="priority" class="form-select">
                <option value="">-- Filter by Priority --</option>
                <option value="high" @(ViewBag.SelectedPriority == "high" ? "selected" : "")>High</option>
                <option value="medium" @(ViewBag.SelectedPriority == "medium" ? "selected" : "")>Medium</option>
                <option value="low" @(ViewBag.SelectedPriority == "low" ? "selected" : "")>Low</option>
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            <a href="@Url.Action("Index", "Todo")" class="btn btn-secondary ms-2">Reset</a>
        </div>
    </form>

    @if (!string.IsNullOrEmpty(ViewBag.SelectedStatus as string) || !string.IsNullOrEmpty(ViewBag.SelectedPriority as string))
    {
        <div class="d-flex align-items-center gap-2 mb-3 filter-info">
            <i class="fas fa-filter text-primary"></i>
            <span>
                Showing results
                @if (!string.IsNullOrEmpty(ViewBag.SelectedStatus as string))
                {
                    <span>for <strong>Status:</strong> @ViewBag.SelectedStatus</span>
                }
                @if (!string.IsNullOrEmpty(ViewBag.SelectedPriority as string))
                {
                    <span>@(string.IsNullOrEmpty(ViewBag.SelectedStatus as string) ? "for " : " and ")<strong>Priority:</strong> @ViewBag.SelectedPriority</span>
                }
            </span>
        </div>
    }



    <div class="table-responsive scrollable-table-container">
        <table class="table table-hover align-middle bg-white mb-0">
            <thead class="table-light">
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Created</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="fw-semibold">@Html.DisplayFor(m => item.Title)</td>
                        <td>@Html.DisplayFor(m => item.Description)</td>
                        <td>@(item.DueDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                        <td>
                            @if (item.IsCompleted.GetValueOrDefault())
                            {
                                <span class="badge bg-success">Completed</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Pending</span>
                            }
                        </td>
                        <td>
                            @{
                                switch (item.Priority?.ToLower())
                                {
                                    case "high":
                                        <text><span class="badge bg-danger">High</span></text>; break;
                                    case "medium":
                                        <text><span class="badge bg-primary">Medium</span></text>; break;
                                    case "low":
                                        <text><span class="badge bg-secondary">Low</span></text>; break;
                                    default:
                                        <text><span class="badge bg-light text-dark">Unknown</span></text>; break;
                                }
                            }
                        </td>
                        <td>@(item.CreatedAt?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                        <td class="text-center">
                            <div class="btn-group" role="group">
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-primary" })
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-info" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-danger" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
